{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/natali/proyects/portfolio-next/components/Cuadrados3D.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as THREE from 'three';\nimport React, { useEffect } from 'react';\nimport { Canvas } from 'react-three-fiber';\nimport { useSprings, a } from 'react-spring/three';\nvar number = 35;\nvar colors = ['#f7ed4c', '#f96766', '#509bd5', '#4c4c4d', '#fefffa'];\n\nvar random = function random(i) {\n  var r = Math.random();\n  return {\n    position: [100 - Math.random() * 200, 100 - Math.random() * 200, i * 1.5],\n    color: colors[Math.round(Math.random() * (colors.length - 1))],\n    scale: [1 + r * 14, 1 + r * 14, 1],\n    rotation: [0, 0, THREE.Math.degToRad(Math.round(Math.random()) * 45)]\n  };\n};\n\nvar data = new Array(number).fill().map(function () {\n  return {\n    color: colors[Math.round(Math.random() * (colors.length - 1))],\n    args: [0.1 + Math.random() * 9, 0.1 + Math.random() * 9, 10]\n  };\n});\n\nfunction Content() {\n  var _this = this;\n\n  var _useSprings = useSprings(number, function (i) {\n    return _objectSpread({\n      from: random(i)\n    }, random(i), {\n      config: {\n        mass: 20,\n        tension: 150,\n        friction: 50\n      }\n    });\n  }),\n      _useSprings2 = _slicedToArray(_useSprings, 2),\n      springs = _useSprings2[0],\n      set = _useSprings2[1];\n\n  useEffect(function () {\n    return void setInterval(function () {\n      return set(function (i) {\n        return _objectSpread({}, random(i), {\n          delay: i * 40\n        });\n      });\n    }, 3000);\n  }, []);\n  return data.map(function (d, index) {\n    return __jsx(a.mesh, _extends({\n      key: index\n    }, springs[index], {\n      castShadow: true,\n      receiveShadow: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }), __jsx(\"boxBufferGeometry\", {\n      attach: \"geometry\",\n      args: d.args,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }), __jsx(a.meshStandardMaterial, {\n      attach: \"material\",\n      color: springs[index].color,\n      roughness: 0.75,\n      metalness: 0.5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }));\n  });\n}\n\nfunction Lights() {\n  return __jsx(\"group\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(\"pointLight\", {\n    intensity: 0.3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), __jsx(\"ambientLight\", {\n    intensity: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), __jsx(\"spotLight\", {\n    castShadow: true,\n    intensity: 0.2,\n    angle: Math.PI / 7,\n    position: [150, 150, 250],\n    penumbra: 1,\n    \"shadow-mapSize-width\": 2048,\n    \"shadow-mapSize-height\": 2048,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function Cuadrados3D() {\n  var isBrowser = true;\n  return __jsx(React.Fragment, null, isBrowser && __jsx(Canvas, {\n    shadowMap: true,\n    camera: {\n      position: [0, 0, 100],\n      fov: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(Lights, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), __jsx(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/home/natali/proyects/portfolio-next/components/Cuadrados3D.js"],"names":["THREE","React","useEffect","Canvas","useSprings","a","number","colors","random","i","r","Math","position","color","round","length","scale","rotation","degToRad","data","Array","fill","map","args","Content","from","config","mass","tension","friction","springs","set","setInterval","delay","d","index","Lights","PI","Cuadrados3D","isBrowser","fov"],"mappings":"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","sourcesContent":["import * as THREE from 'three'\nimport React, { useEffect } from 'react'\nimport { Canvas } from 'react-three-fiber'\nimport { useSprings, a } from 'react-spring/three'\nconst number =35; \nconst colors = ['#f7ed4c', '#f96766', '#509bd5', '#4c4c4d', '#fefffa']\nconst random = i => {\n  const r = Math.random()\n  return {\n    position: [100 - Math.random() * 200, 100 - Math.random() * 200, i * 1.5],\n    color: colors[Math.round(Math.random() * (colors.length- 1))],\n    scale: [1 + r * 14, 1 + r * 14, 1],\n    rotation: [0, 0, THREE.Math.degToRad(Math.round(Math.random()) * 45)]\n  }\n}\n\nconst data = new Array(number).fill().map(() => {\n  return {\n    color: colors[Math.round(Math.random() * (colors.length - 1))],\n    args: [0.1 + Math.random() * 9, 0.1 + Math.random() * 9, 10]\n  }\n})\n\nfunction Content() {\n  const [springs, set] = useSprings(number, i => ({\n    from: random(i),\n    ...random(i),\n    config: { mass: 20, tension: 150, friction: 50 }\n  }))\n  \n    useEffect( () =>\n      void setInterval(\n        () => set(i => ({ ...random(i), delay: i * 40 })),\n        3000)\n    ,[]);  \n  \n  return data.map((d, index) => (\n    <a.mesh key={index} {...springs[index]} castShadow receiveShadow>\n      <boxBufferGeometry attach=\"geometry\" args={d.args} />\n      <a.meshStandardMaterial attach=\"material\" color={springs[index].color} roughness={0.75} metalness={0.5} />\n    </a.mesh>\n  ))\n}\n\nfunction Lights() {\n  return (\n    <group>\n      <pointLight intensity={0.3} />\n      <ambientLight intensity={2} />\n      <spotLight\n        castShadow\n        intensity={0.2}\n        angle={Math.PI / 7}\n        position={[150, 150, 250]}\n        penumbra={1}\n        shadow-mapSize-width={2048}\n        shadow-mapSize-height={2048}\n      />\n    </group>\n  )\n}\n\nexport default function Cuadrados3D() {\n  const isBrowser = typeof window !== \"undefined\";\n  return (\n    <>\n      { isBrowser && (\n        <Canvas shadowMap camera={{ position: [0, 0, 100], fov: 100 }}>\n          <Lights />\n          <Content />\n        </Canvas>\n      )}\n    </>  \n  )\n}\n"]},"metadata":{},"sourceType":"module"}